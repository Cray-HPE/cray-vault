#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
# Default values for cray-vault.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""

# Needed for install/maintenance jobs
kubectl:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker-kubectl
    tag: 1.24.17
    pullPolicy: IfNotPresent

# Ingress gateways to allow vault access over
ingress:
  gateways:
    - "services/services-gateway"
    - "services/customer-admin-gateway"
  host: vault.local

serviceAccountName: "vault"

allowedAuthNamespaces:
  - namespace: services
    serviceaccount: "*"
    ttl: 72h
  - namespace: uas
    serviceaccount: "*"
    ttl: 72h
  - namespace: slurm-operator
    serviceaccount: "slurm-operator"
    ttl: 72h

vault:
  ui: false
  size: 3
  image: "artifactory.algol60.net/csm-docker/stable/docker.io/library/vault:1.10.8"
  bankVaultsImage: "artifactory.algol60.net/csm-docker/stable/ghcr.io/banzaicloud/bank-vaults:1.16.0"
  statsdImage: "artifactory.algol60.net/csm-docker/stable/docker.io/prom/statsd-exporter:v0.18.0"
  veleroFsfreezeImage: "artifactory.algol60.net/csm-docker/stable/docker.io/library/ubuntu:focal"
  antiaffinity:
    enabled: true
    topologyKey: "kubernetes.io/hostname"
  # This works around an upstream banzai bank vaults issue if the init container
  # runs under a different context than the vault pods.
  #
  # Comment out if unneeded or causing issues, should be unnecessary generally.
  vaultInitContainers:
    - name: vault-config-permissions
      image: "artifactory.algol60.net/csm-docker/stable/docker.io/library/alpine:3.16"
      command:
        - /bin/sh
        - -c
        - |
          chown -R 100:1000 /vault/config
      volumeMounts:
        - name: vault-config
          mountPath: /vault/config

audit:
  enabled: false
  path: /var/log/audit/service/vault/audit.log
  pvc:
    accessMode: "ReadWriteOnce"
    storage: 10Gi

jwt:  # TODO - Test this out
  enabled: false
  config:
    oidc_discovery_url: "https://api-gw-service-nmn.local/keycloak"
    bound_issuer: "https://api-gw-service-nmn.local/keycloak/realms/shasta"
    default_role: "default"
  audience: "cray"

raft:
  performance_multiplier: 5
  pvc:
    accessMode: "ReadWriteOnce"
    storage: 2Gi

pki:
  customCA:
    # Set enabled to true and set other fields accordingly
    # to enable vault to mount a PKI engine and serve the
    # supplied CA.
    #
    # Note that all of the certificate/key material provided
    # must be PEM encoded. The ca_bundle.crt must only contain
    # certificates that comprise the trust chain, and it is important
    # that it does to ensure clients within the system can properly
    # verify issued certificates.
    #
    # These settings should be managed by system-level customization, versus
    # directly in chart.
    #
    enabled: true
    secret: generated-platform-ca-1
    private_key: int_ca.key
    certificate: int_ca.crt
    ca_bundle: root_ca.crt
ssh:
  certs:
    # Set enabled to true and uncomment/edit/add realms to
    # configure SSH Certificate trust realms.
    # For each realm, allowedAuthNamespaces control
    # the allow-list of service accounts accepted by namespace,
    # for K8S auth to vault.
    #
    # Note that that SSH CA support is currently limited to
    # user key support. Host key signing is also supported via
    # vault, but not enabled here.
    #
    enabled: true
    realms:
      - name: compute
        allowedAuthNamespaces:
          - services
